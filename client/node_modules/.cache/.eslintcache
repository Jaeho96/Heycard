[{"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\index.js":"1","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\App.js":"2","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\reportWebVitals.js":"3","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Home.js":"4","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Signin.js":"5","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Sidebar.js":"6","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Myspace.js":"7","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Navigation.js":"8","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\NavigationUser.js":"9","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Repository.js":"10","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\index.js":"11","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\App.js":"12","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Navigation.js":"13","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\NavigationUser.js":"14","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Signin.js":"15","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Home.js":"16","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Repository.js":"17","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Myspace.js":"18","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Sidebar.js":"19","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Modal.js":"20"},{"size":146,"mtime":1615360092421,"results":"21","hashOfConfig":"22"},{"size":2117,"mtime":1618287452156,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1615354195368,"results":"24","hashOfConfig":"22"},{"size":400,"mtime":1615966520317,"results":"25","hashOfConfig":"22"},{"size":2381,"mtime":1617690054687,"results":"26","hashOfConfig":"22"},{"size":1173,"mtime":1617601293275,"results":"27","hashOfConfig":"22"},{"size":8650,"mtime":1618327765880,"results":"28","hashOfConfig":"22"},{"size":619,"mtime":1618150451207,"results":"29","hashOfConfig":"22"},{"size":1143,"mtime":1617599365326,"results":"30","hashOfConfig":"22"},{"size":225,"mtime":1617436536027,"results":"31","hashOfConfig":"22"},{"size":146,"mtime":1615360092421,"results":"32","hashOfConfig":"33"},{"size":2153,"mtime":1619277728463,"results":"34","hashOfConfig":"33"},{"size":619,"mtime":1618150451207,"results":"35","hashOfConfig":"33"},{"size":1143,"mtime":1617599365326,"results":"36","hashOfConfig":"33"},{"size":2381,"mtime":1617690054687,"results":"37","hashOfConfig":"33"},{"size":400,"mtime":1615966520317,"results":"38","hashOfConfig":"33"},{"size":1663,"mtime":1619661276894,"results":"39","hashOfConfig":"33"},{"size":9439,"mtime":1619659579539,"results":"40","hashOfConfig":"33"},{"size":1190,"mtime":1619277684384,"results":"41","hashOfConfig":"33"},{"size":1696,"mtime":1619662942234,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1tajlfb",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1serm9t",{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\index.js",[],["89","90"],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\App.js",["91"],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\reportWebVitals.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Home.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Signin.js",["92","93"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Signin({ authenticated, login, gettoken, location }) {\r\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\r\n  const kakaoLoginClickHandler = () => {\r\n    //카카오 로그인 api\r\n    Kakao.Auth.login({\r\n      scope: \"profile, account_email, gender\",\r\n      success: function (authObj) {\r\n        //토큰\r\n        setToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: \"/v2/user/me\",\r\n          success: (res) => {\r\n            // res.kakao_account (사용자 정보)\r\n            setUsername(res.kakao_account.profile.nickname);\r\n          }, // Kakao.API.request.success - end\r\n        }); // Kakao.API.request - end\r\n      }, // Kakao.Auth.login.success - end\r\n    }); // Kakao.Auth.login - end\r\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\r\n  useEffect(() => {\r\n    //username state의 값이 변하게 되면 login({username})을 실행\r\n    return () => login({ username });\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\r\n    return () => gettoken({ token });\r\n  }, [token]);\r\n\r\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (authenticated) return <Redirect to={from} />;\r\n\r\n  return (\r\n    <div className=\"Main-sign\">\r\n      <div className=\"sign-logo\">\r\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\r\n      </div>\r\n\r\n      <div className=\"sign-text\">\r\n        <p> 지금 회원가입하시면 </p>\r\n        <p> 명함이 5초만에 뚝딱!</p>\r\n      </div>\r\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\r\n        {\" \"}\r\n      </button>\r\n      <Link to=\"/signin\" className=\"sign-btn2\">\r\n        카카오 계정으로 <u>신규 가입하기</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Sidebar.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Myspace.js",["94","95"],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Navigation.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\NavigationUser.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Repository.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\index.js",[],["96","97"],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\App.js",["98"],"import React, { useState } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport css from \"./App.css\";\n\nimport NavigationUser from \"./Components/NavigationUser\";\nimport Navigation from \"./Components/Navigation\";\nimport Home from \"./routes/Home\";\nimport Myspace from \"./routes/Myspace\";\nimport Signin from \"./routes/Signin\";\nimport Repository from \"./routes/Repository\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  // login({username})의 함수를 통해 Signin.js에서 username을 가져와 setUser을 통해 상태관리\n  const authenticated = user != null; // 사용자 로그인 인증\n\n  const [usertoken, setuserToken] = useState(null); //위와 같은 login으로 token값을 가져옴\n  const gettoken = ({ token }) => setuserToken({ token });\n\n  const login = ({ username }) => setUser({ username });\n  const logout = () => setUser(null);\n\n  return (\n    <>\n      <HashRouter>\n        {authenticated ? ( //사용자가 로그인 O\n          <NavigationUser user={user} logout={logout} /> //사용자의 카카오 닉네임을 받아온 user(state)와 logout함수를 인자로 보내준다.\n        ) : (\n          // 사용자가 로그인 X\n          <Navigation />\n        )}\n        <Route path=\"/\" exact={true} component={Home} /> {/* HOME 화면 */}\n        <Route\n          path=\"/myspace\"\n          exact={true}\n          render={(props) => <Myspace usertoken={usertoken} {...props} />}\n        />\n        {/* MY SPACE(명함만들기) 화면 */}\n        <Route path=\"/myspace/repository\" exact={true} component={Repository} />\n        {/* REPOSITORY(명함보관함) 화면 */}\n        <Route\n          path=\"/signin\"\n          render={(props) => (\n            <Signin\n              authenticated={authenticated}\n              login={login}\n              gettoken={gettoken}\n              {...props}\n            />\n          )} // Signin(로그인)을 렌더링할때 authenticated(사용자 로그인 여부)와 login(카카오 로그인 api에서 사용자 닉네임을 받아오기 위한 함수)를 인자로 보내준다.\n        />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Navigation.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\NavigationUser.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Signin.js",["99","100"],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Home.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Repository.js",["101","102"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\n\r\n//명함 만들기 main 화면\r\nconst MakemainPositioner = styled.div`\r\n  display: flex;\r\n  border-style: solid;\r\n`;\r\n// 출력폼\r\nconst Outputform = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Outputlayer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-style: solid;\r\n  border-radius: 20px;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n`;\r\n\r\nconst Cardlayer = styled.div`\r\n  width: 250px;\r\n  height: 500px;\r\n  border-style: solid;\r\n`;\r\n\r\nfunction Repository() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let completed = false; //초기에는 실행해야 되기때문에 false flag 변수\r\n\r\n    //query를 리턴하는 함수를 result에 할당\r\n    async function get() {\r\n      const result = await axios.get(\"http://localhost:3001/api/get\");\r\n      if (!completed) setData(result.data);\r\n    }\r\n    get();\r\n    return () => {\r\n      completed = true;\r\n    };\r\n\r\n    //query가 변할때 useEffect를 실행해야하는 시점이다.\r\n  }, []);\r\n\r\n  return (\r\n    <MakemainPositioner>\r\n      <Sidebar />\r\n      <Outputform>\r\n        <Outputlayer>\r\n          <Cardlayer>\r\n            {data.map((item) => (\r\n              <img src={item.img} width=\"150\" height=\"250\"></img>\r\n            ))}\r\n          </Cardlayer>\r\n        </Outputlayer>\r\n      </Outputform>\r\n    </MakemainPositioner>\r\n  );\r\n}\r\n\r\nexport default Repository;\r\n","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Myspace.js",["103","104","105"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport Axios from \"axios\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport FileSaver, { saveAs } from \"file-saver\";\r\nimport Modal from \"../Components/Modal\";\r\n\r\n//명함 만들기 main 화면\r\nconst MakemainPositioner = styled.div`\r\n  display: flex;\r\n`;\r\n// 출력폼\r\nconst Outputform = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Outputlayer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-style: solid;\r\n  border-radius: 20px;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Outputcorporate = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 90%;\r\n  height: 65px;\r\n  margin-top: 1rem;\r\n  border-bottom-style: solid;\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Outputname = styled.div`\r\n  width: 90%;\r\n  height: 50px;\r\n  margin-top: 1rem;\r\n  font-size: 50px;\r\n`;\r\n\r\nconst Outputposition = styled.div`\r\n  width: 90%;\r\n  height: 50px;\r\n  margin-top: 1rem;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Outputphonenumber = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputofficenumber = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputemail = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputaddress = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputintroduceheader = styled.label`\r\n  width: 90%;\r\n  margin-top: 1rem;\r\n  font-size: 25px;\r\n  border-top-style: solid;\r\n  text-align: center;\r\n`;\r\n\r\nconst Outputintroduce = styled.div`\r\n  width: 90%;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\n// 입력폼\r\nconst Inputform = styled.div`\r\n  width: 50%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n`;\r\n// 명함 컬러 선택하기\r\nconst Cololselector = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Colorbuttons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\n// 기본 정보 입력하기\r\nconst Infotitle = styled.div`\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  margin-top: 1rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Infoinputs = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Infoinputposition = styled.div``;\r\n\r\nconst Infoinput = styled.input`\r\n  width: 500px;\r\n  font-size: 15px;\r\n  margin-top: 0.5rem;\r\n  margin-left: 2rem;\r\n  margin-right: 8rem;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst Introduceinput = styled.textarea`\r\n  width: 500px;\r\n  height: 230px;\r\n  font-size: 15px;\r\n  margin-top: 1rem;\r\n  margin-left: 2rem;\r\n  margin-right: 8rem;\r\n  border-radius: 15px;\r\n`;\r\n\r\nfunction Myspace({ usertoken }) {\r\n  const { token } = usertoken || {}; // App.js에서 token값 가져오기\r\n\r\n  const [values, setValues] = useState({\r\n    token: token,\r\n    color: \"\",\r\n    name: \"\",\r\n    mail: \"\",\r\n    corporate: \"\",\r\n    position: \"\",\r\n    phonenumber: \"\",\r\n    officenumber: \"\",\r\n    address: \"\",\r\n    introduce: \"\",\r\n    img: \"\",\r\n    title: \"\",\r\n  });\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const openModal = (e) => {\r\n    setModalOpen(true);\r\n    const { name } = e.target;\r\n    domtoimage\r\n      .toBlob(document.getElementById(\"outputimg\"))\r\n      .then(function (blob) {\r\n        let reader = new FileReader(); //캡쳐한 blob을 dataurl로 변환\r\n        reader.readAsDataURL(blob);\r\n        reader.onloadend = () => {\r\n          let base64data = reader.result;\r\n          setValues({ ...values, [name]: base64data });\r\n        };\r\n      });\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    // Basicinfo input eventhandle function\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    // Colorselect button eventhandle function\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  console.log(values);\r\n\r\n  return (\r\n    <MakemainPositioner>\r\n      <Sidebar />\r\n      <Outputform>\r\n        <Outputlayer id=\"outputimg\" style={{ backgroundColor: values.color }}>\r\n          <Outputcorporate>{values.corporate}</Outputcorporate>\r\n          <Outputname>{values.name}</Outputname>\r\n          <Outputposition>{values.position}</Outputposition>\r\n          <Outputphonenumber>{values.phonenumber}</Outputphonenumber>\r\n          <Outputofficenumber>{values.officenumber}</Outputofficenumber>\r\n          <Outputemail>{values.mail}</Outputemail>\r\n          <Outputaddress>{values.address}</Outputaddress>\r\n          <Outputintroduceheader>INTRODUCE</Outputintroduceheader>\r\n          <Outputintroduce>{values.introduce}</Outputintroduce>\r\n        </Outputlayer>\r\n      </Outputform>\r\n      <Inputform>\r\n        <Cololselector>\r\n          명함 컬러 선택하기\r\n          <Colorbuttons>\r\n            <button name=\"color\" value=\"red\" onClick={handleClick}>\r\n              빨강\r\n            </button>\r\n            <button name=\"color\" value=\"orange\" onClick={handleClick}>\r\n              주황\r\n            </button>\r\n            <button name=\"color\" value=\"yellow\" onClick={handleClick}>\r\n              노랑\r\n            </button>\r\n            <button name=\"color\" value=\"blue\" onClick={handleClick}>\r\n              파랑\r\n            </button>\r\n          </Colorbuttons>\r\n        </Cololselector>\r\n        <Infotitle>기본 정보 입력하기</Infotitle>\r\n        <Infoinputs>\r\n          <Infoinputposition>\r\n            <label>이름</label>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"   이름을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>메일주소</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"mail\"\r\n              value={values.mail}\r\n              placeholder=\"   e-mail을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n        </Infoinputs>\r\n        <Infotitle>추가 정보 입력하기</Infotitle>\r\n        <Infoinputs>\r\n          <Infoinputposition>\r\n            <label>회사명</label>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"corporate\"\r\n              value={values.corporate}\r\n              placeholder=\"   회사명을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>직급</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"position\"\r\n              value={values.position}\r\n              placeholder=\"   직급을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>휴대폰번호</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"phonenumber\"\r\n              value={values.phonenumber}\r\n              placeholder=\"   휴대폰번호를 입력하세요(010-XXXX-XXXX)\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>전화번호</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"officenumber\"\r\n              value={values.officenumber}\r\n              placeholder=\"   전화번호를 입력하세요(02-XXX-XXXX)\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>주소</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={values.address}\r\n              placeholder=\"   주소를 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>소개</lable>\r\n            <Introduceinput\r\n              type=\"text\"\r\n              name=\"introduce\"\r\n              value={values.introduce}\r\n              placeholder=\"   나를 설명할 수 있는 소개글을 작성해보세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <button name=\"img\" onClick={openModal}>\r\n              저장\r\n            </button>\r\n            {/* header 부분에 텍스트를 입력한다. */}\r\n            <Modal open={modalOpen} close={closeModal} values={values}>\r\n              {/* Modal.js <main> {props.children} </main>에 내용이 입력된다. */}\r\n              명함 이름을 지어주세요\r\n              <input\r\n                name=\"title\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                placeholder=\"명함 이름을 입력하세요\"\r\n              ></input>\r\n            </Modal>\r\n          </Infoinputposition>\r\n        </Infoinputs>\r\n      </Inputform>\r\n    </MakemainPositioner>\r\n  );\r\n}\r\n\r\nexport default Myspace;\r\n","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Sidebar.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Modal.js",["106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":11},{"ruleId":"115","severity":1,"message":"116","line":33,"column":6,"nodeType":"117","endLine":33,"endColumn":16,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":38,"column":6,"nodeType":"117","endLine":38,"endColumn":13,"suggestions":"120"},{"ruleId":"111","severity":1,"message":"121","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":17},{"ruleId":"111","severity":1,"message":"122","line":5,"column":21,"nodeType":"113","messageId":"114","endLine":5,"endColumn":27},{"ruleId":"107","replacedBy":"123"},{"ruleId":"109","replacedBy":"124"},{"ruleId":"111","severity":1,"message":"112","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":11},{"ruleId":"115","severity":1,"message":"116","line":33,"column":6,"nodeType":"117","endLine":33,"endColumn":16,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"119","line":38,"column":6,"nodeType":"117","endLine":38,"endColumn":13,"suggestions":"126"},{"ruleId":"111","severity":1,"message":"127","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":62,"column":15,"nodeType":"130","endLine":62,"endColumn":60},{"ruleId":"111","severity":1,"message":"127","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":13},{"ruleId":"111","severity":1,"message":"121","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":17},{"ruleId":"111","severity":1,"message":"122","line":6,"column":21,"nodeType":"113","messageId":"114","endLine":6,"endColumn":27},{"ruleId":"111","severity":1,"message":"131","line":26,"column":10,"nodeType":"113","messageId":"114","endLine":26,"endColumn":14},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'css' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array. If 'login' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'gettoken'. Either include it or remove the dependency array. If 'gettoken' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["135"],"'FileSaver' is defined but never used.","'saveAs' is defined but never used.",["132"],["133"],["136"],["137"],"'Axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"138","fix":"142"},{"desc":"140","fix":"143"},"Update the dependencies array to be: [login, username]",{"range":"144","text":"145"},"Update the dependencies array to be: [gettoken, token]",{"range":"146","text":"147"},{"range":"148","text":"145"},{"range":"149","text":"147"},[1277,1287],"[login, username]",[1410,1417],"[gettoken, token]",[1277,1287],[1410,1417]]