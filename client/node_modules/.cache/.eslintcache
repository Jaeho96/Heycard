[{"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\index.js":"1","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\App.js":"2","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\reportWebVitals.js":"3","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Home.js":"4","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Signin.js":"5","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Sidebar.js":"6","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Myspace.js":"7","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Navigation.js":"8","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\NavigationUser.js":"9","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Repository.js":"10","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\index.js":"11","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\App.js":"12","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Navigation.js":"13","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\NavigationUser.js":"14","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Signin.js":"15","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Home.js":"16","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Repository.js":"17","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Myspace.js":"18","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Sidebar.js":"19","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Modal.js":"20","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Card.js":"21","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Modalrepository.js":"22"},{"size":146,"mtime":1615360092421,"results":"23","hashOfConfig":"24"},{"size":2117,"mtime":1618287452156,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1615354195368,"results":"26","hashOfConfig":"24"},{"size":400,"mtime":1615966520317,"results":"27","hashOfConfig":"24"},{"size":2381,"mtime":1617690054687,"results":"28","hashOfConfig":"24"},{"size":1173,"mtime":1617601293275,"results":"29","hashOfConfig":"24"},{"size":8650,"mtime":1618327765880,"results":"30","hashOfConfig":"24"},{"size":619,"mtime":1618150451207,"results":"31","hashOfConfig":"24"},{"size":1143,"mtime":1617599365326,"results":"32","hashOfConfig":"24"},{"size":225,"mtime":1617436536027,"results":"33","hashOfConfig":"24"},{"size":146,"mtime":1615360092421,"results":"34","hashOfConfig":"35"},{"size":2539,"mtime":1620093860348,"results":"36","hashOfConfig":"35"},{"size":619,"mtime":1618150451207,"results":"37","hashOfConfig":"35"},{"size":1143,"mtime":1617599365326,"results":"38","hashOfConfig":"35"},{"size":2661,"mtime":1620023265355,"results":"39","hashOfConfig":"35"},{"size":400,"mtime":1615966520317,"results":"40","hashOfConfig":"35"},{"size":4821,"mtime":1620796116206,"results":"41","hashOfConfig":"35"},{"size":11006,"mtime":1620790636737,"results":"42","hashOfConfig":"35"},{"size":1190,"mtime":1619277684384,"results":"43","hashOfConfig":"35"},{"size":1723,"mtime":1620094391193,"results":"44","hashOfConfig":"35"},{"size":5330,"mtime":1620801443576,"results":"45","hashOfConfig":"35"},{"size":880,"mtime":1620801134904,"results":"46","hashOfConfig":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1tajlfb",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"1serm9t",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\index.js",[],["97","98"],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\App.js",["99"],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\reportWebVitals.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Home.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Signin.js",["100","101"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Signin({ authenticated, login, gettoken, location }) {\r\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\r\n  const kakaoLoginClickHandler = () => {\r\n    //카카오 로그인 api\r\n    Kakao.Auth.login({\r\n      scope: \"profile, account_email, gender\",\r\n      success: function (authObj) {\r\n        //토큰\r\n        setToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: \"/v2/user/me\",\r\n          success: (res) => {\r\n            // res.kakao_account (사용자 정보)\r\n            setUsername(res.kakao_account.profile.nickname);\r\n          }, // Kakao.API.request.success - end\r\n        }); // Kakao.API.request - end\r\n      }, // Kakao.Auth.login.success - end\r\n    }); // Kakao.Auth.login - end\r\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\r\n  useEffect(() => {\r\n    //username state의 값이 변하게 되면 login({username})을 실행\r\n    return () => login({ username });\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\r\n    return () => gettoken({ token });\r\n  }, [token]);\r\n\r\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (authenticated) return <Redirect to={from} />;\r\n\r\n  return (\r\n    <div className=\"Main-sign\">\r\n      <div className=\"sign-logo\">\r\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\r\n      </div>\r\n\r\n      <div className=\"sign-text\">\r\n        <p> 지금 회원가입하시면 </p>\r\n        <p> 명함이 5초만에 뚝딱!</p>\r\n      </div>\r\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\r\n        {\" \"}\r\n      </button>\r\n      <Link to=\"/signin\" className=\"sign-btn2\">\r\n        카카오 계정으로 <u>신규 가입하기</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Sidebar.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Myspace.js",["102","103"],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\Navigation.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\Components\\NavigationUser.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\전자명함Project\\makecard\\src\\routes\\Repository.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\index.js",[],["104","105"],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\App.js",["106"],"import React, { useState } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport css from \"./App.css\";\n\nimport NavigationUser from \"./Components/NavigationUser\";\nimport Navigation from \"./Components/Navigation\";\nimport Home from \"./routes/Home\";\nimport Myspace from \"./routes/Myspace\";\nimport Signin from \"./routes/Signin\";\nimport Repository from \"./routes/Repository\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  // login({username})의 함수를 통해 Signin.js에서 username을 가져와 setUser을 통해 상태관리\n  const authenticated = user != null; // 사용자 로그인 인증\n  const login = ({ username }) => setUser({ username });\n  const logout = () => setUser(null);\n\n  const [usertoken, setuserToken] = useState(null); //위와 같은 login으로 token값을 가져옴\n  const gettoken = ({ token }) => setuserToken({ token });\n\n  const [usermail, setuserMail] = useState(null);\n  const getusermail = ({ logmail }) => setuserMail({ logmail });\n\n  return (\n    <>\n      <HashRouter>\n        {authenticated ? ( //사용자가 로그인 O\n          <NavigationUser user={user} logout={logout} /> //사용자의 카카오 닉네임을 받아온 user(state)와 logout함수를 인자로 보내준다.\n        ) : (\n          // 사용자가 로그인 X\n          <Navigation />\n        )}\n        <Route path=\"/\" exact={true} component={Home} /> {/* HOME 화면 */}\n        <Route\n          path=\"/myspace\"\n          exact={true}\n          render={(props) => (\n            <Myspace usertoken={usertoken} usermail={usermail} {...props} />\n          )}\n        />\n        {/* MY SPACE(명함만들기) 화면 */}\n        <Route\n          path=\"/myspace/repository\"\n          exact={true}\n          render={(props) => (\n            <Repository\n              usertoken={usertoken}\n              usermail={usermail}\n              {...[props]}\n            />\n          )}\n        />\n        {/* REPOSITORY(명함보관함) 화면 */}\n        <Route\n          path=\"/signin\"\n          render={(props) => (\n            <Signin\n              authenticated={authenticated}\n              login={login}\n              gettoken={gettoken}\n              getusermail={getusermail}\n              {...props}\n            />\n          )} // Signin(로그인)을 렌더링할때 authenticated(사용자 로그인 여부)와 login(카카오 로그인 api에서 사용자 닉네임을 받아오기 위한 함수)를 인자로 보내준다.\n        />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Navigation.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\NavigationUser.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Signin.js",["107","108","109"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Signin({ authenticated, login, gettoken, getusermail, location }) {\r\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [logmail, setlogMail] = useState(\"\");\r\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\r\n  const kakaoLoginClickHandler = () => {\r\n    //카카오 로그인 api\r\n    Kakao.Auth.login({\r\n      scope: \"profile, account_email, gender\",\r\n      success: function (authObj) {\r\n        //토큰\r\n        setToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: \"/v2/user/me\",\r\n          success: (res) => {\r\n            // res.kakao_account (사용자 정보)\r\n            setUsername(res.kakao_account.profile.nickname);\r\n            setlogMail(res.kakao_account.email);\r\n          }, // Kakao.API.request.success - end\r\n        }); // Kakao.API.request - end\r\n      }, // Kakao.Auth.login.success - end\r\n    }); // Kakao.Auth.login - end\r\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\r\n\r\n  useEffect(() => {\r\n    //username state의 값이 변하게 되면 login({username})을 실행\r\n    return () => login({ username });\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\r\n    return () => gettoken({ token });\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    //usermail state의 값이 변하게 되면 getusermail({usermail})을 실행\r\n    return () => getusermail({ logmail });\r\n  }, [logmail]);\r\n\r\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (authenticated) return <Redirect to={from} />;\r\n\r\n  return (\r\n    <div className=\"Main-sign\">\r\n      <div className=\"sign-logo\">\r\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\r\n      </div>\r\n\r\n      <div className=\"sign-text\">\r\n        <p> 지금 회원가입하시면 </p>\r\n        <p> 명함이 5초만에 뚝딱!</p>\r\n      </div>\r\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\r\n        {\" \"}\r\n      </button>\r\n      <Link to=\"/signin\" className=\"sign-btn2\">\r\n        카카오 계정으로 <u>신규 가입하기</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Home.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Repository.js",["110","111","112","113"],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\routes\\Myspace.js",["114","115","116"],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Sidebar.js",[],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Modal.js",["117","118","119"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  const { open, close, values } = props;\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴.\r\n\r\n  const submit = () => {\r\n    Axios.post(\"http://localhost:3001/api/insert\", {\r\n      token: values.token,\r\n      color: values.color,\r\n      name: values.name,\r\n      mail: values.mail,\r\n      corporate: values.corporate,\r\n      position: values.position,\r\n      phonenumber: values.phonenumber,\r\n      officenumber: values.officenumber,\r\n      address: values.address,\r\n      introduce: values.introduce,\r\n      img: values.img,\r\n      title: values.title,\r\n    });\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   //query를 리턴하는 함수를 result에 할당\r\n  //   async function get() {\r\n  //     const result = await Axios.get(\"http://localhost:3001/api/get/title\");\r\n  //     setData(result.data);\r\n  //   }\r\n  //   get();\r\n  //   //query가 변할때 useEffect를 실행해야하는 시점이다.\r\n  // }, []);\r\n\r\n  return (\r\n    //모달이 열릴때 openModal클래스가 생성된다.\r\n    <div className={open ? \"openModal modal\" : \"modal\"}>\r\n      {open ? (\r\n        <section>\r\n          <header>\r\n            명함이름\r\n            <button className=\"close\" onClick={close}>\r\n              &times;\r\n            </button>\r\n          </header>\r\n          <main>{props.children}</main>\r\n          <footer>\r\n            <button className=\"close\" onClick={submit}>\r\n              저장\r\n            </button>\r\n          </footer>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Card.js",["120","121","122"],"C:\\Users\\qnddj\\Desktop\\React Project\\HeyCard\\client\\src\\Components\\Modalrepository.js",["123","124","125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":11},{"ruleId":"134","severity":1,"message":"135","line":33,"column":6,"nodeType":"136","endLine":33,"endColumn":16,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":38,"column":6,"nodeType":"136","endLine":38,"endColumn":13,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"140","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":17},{"ruleId":"130","severity":1,"message":"141","line":5,"column":21,"nodeType":"132","messageId":"133","endLine":5,"endColumn":27},{"ruleId":"126","replacedBy":"142"},{"ruleId":"128","replacedBy":"143"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":11},{"ruleId":"134","severity":1,"message":"135","line":36,"column":6,"nodeType":"136","endLine":36,"endColumn":16,"suggestions":"144"},{"ruleId":"134","severity":1,"message":"138","line":41,"column":6,"nodeType":"136","endLine":41,"endColumn":13,"suggestions":"145"},{"ruleId":"134","severity":1,"message":"146","line":46,"column":6,"nodeType":"136","endLine":46,"endColumn":15,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"148","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":13},{"ruleId":"130","severity":1,"message":"149","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":23},{"ruleId":"130","severity":1,"message":"150","line":54,"column":11,"nodeType":"132","messageId":"133","endLine":54,"endColumn":22},{"ruleId":"130","severity":1,"message":"151","line":55,"column":11,"nodeType":"132","messageId":"133","endLine":55,"endColumn":21},{"ruleId":"130","severity":1,"message":"148","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":13},{"ruleId":"130","severity":1,"message":"140","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":17},{"ruleId":"130","severity":1,"message":"141","line":6,"column":21,"nodeType":"132","messageId":"133","endLine":6,"endColumn":27},{"ruleId":"130","severity":1,"message":"152","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"153","line":26,"column":10,"nodeType":"132","messageId":"133","endLine":26,"endColumn":14},{"ruleId":"130","severity":1,"message":"154","line":26,"column":16,"nodeType":"132","messageId":"133","endLine":26,"endColumn":23},{"ruleId":"155","severity":1,"message":"156","line":147,"column":11,"nodeType":"157","endLine":147,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":148,"column":11,"nodeType":"157","endLine":148,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":149,"column":11,"nodeType":"157","endLine":149,"endColumn":44},{"ruleId":"130","severity":1,"message":"158","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"152","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"148","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":13},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'css' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array. If 'login' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["161"],"React Hook useEffect has a missing dependency: 'gettoken'. Either include it or remove the dependency array. If 'gettoken' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["162"],"'FileSaver' is defined but never used.","'saveAs' is defined but never used.",["159"],["160"],["163"],["164"],"React Hook useEffect has a missing dependency: 'getusermail'. Either include it or remove the dependency array. If 'getusermail' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["165"],"'Axios' is defined but never used.","'Modalrepository' is defined but never used.","'repositoken' is assigned a value but never used.","'reposimail' is assigned a value but never used.","'useEffect' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Toggle__btn must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"166","fix":"170"},{"desc":"168","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [login, username]",{"range":"174","text":"175"},"Update the dependencies array to be: [gettoken, token]",{"range":"176","text":"177"},{"range":"178","text":"175"},{"range":"179","text":"177"},"Update the dependencies array to be: [getusermail, logmail]",{"range":"180","text":"181"},[1277,1287],"[login, username]",[1410,1417],"[gettoken, token]",[1389,1399],[1522,1529],[1666,1675],"[getusermail, logmail]"]