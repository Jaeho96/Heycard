{"ast":null,"code":"var fs = require('fs');\n/*!\n * add 1 to suffix number\n * @param {String} name file basename\n * @return {String} name with addition\n */\n\n\nvar addOne = function (name) {\n  name = name.split('_');\n  var n = Number(name.pop()) + 1;\n  name.push(n);\n  return name.join('_');\n};\n/*!\n * detect if name has a number suffix after '_'\n * (example: picture_5.jpg)\n * @param  {string}  name basename to examinate\n * @return {Boolean|Number}      if has not suffix: false, else: name with addition\n */\n\n\nvar hasSuffix = function (name) {\n  var suffix, splitted;\n\n  if (!isNaN(name)) {\n    return false;\n  } else {\n    splitted = name.split('_');\n\n    if (splitted.length > 1) {\n      suffix = splitted.pop();\n\n      if (isNaN(suffix)) {\n        return false;\n      } else {\n        return addOne(name);\n      }\n    } else {\n      return false;\n    }\n  }\n};\n/*!\n * separate basename from file path and send it to rename\n * @param  {String} route route of the file\n * @return {String}       new name\n */\n\n\nvar newName = function (route) {\n  // get filename\n  route = route.split('/');\n  var filename = route.pop();\n  var splitted = filename.split('.');\n  var basename = splitted.shift();\n  var ext = splitted.join('.');\n  var suffix = hasSuffix(basename); // check if filefileName has suffix\n\n  if (suffix) {\n    basename = suffix;\n  } else {\n    basename = basename + '_1';\n  }\n\n  filename = [basename, ext].join('.');\n  route.push(filename);\n  return route.join('/');\n};\n/*!\n * detects if file route exist and send it to rename\n * @param  {String} route file path\n * @return {String}       unique path\n */\n\n\nvar finalName = function (route) {\n  if (fs.existsSync(route)) {\n    return finalName(newName(route));\n  } else {\n    return route;\n  }\n};\n\nmodule.exports = finalName;","map":{"version":3,"sources":["C:/Users/qnddj/Desktop/React Project/전자명함Project/makecard/node_modules/filesaver/src/changename.js"],"names":["fs","require","addOne","name","split","n","Number","pop","push","join","hasSuffix","suffix","splitted","isNaN","length","newName","route","filename","basename","shift","ext","finalName","existsSync","module","exports"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,MAAM,GAAG,UAAUC,IAAV,EAAgB;AAC5BA,EAAAA,IAAI,GAAGA,IAAI,CAACC,KAAL,CAAY,GAAZ,CAAP;AACA,MAAIC,CAAC,GAAGC,MAAM,CAAEH,IAAI,CAACI,GAAL,EAAF,CAAN,GAAsB,CAA9B;AACAJ,EAAAA,IAAI,CAACK,IAAL,CAAWH,CAAX;AACA,SAAOF,IAAI,CAACM,IAAL,CAAW,GAAX,CAAP;AACA,CALD;AAQA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,SAAS,GAAG,UAAUP,IAAV,EAAgB;AAC/B,MAAIQ,MAAJ,EAAYC,QAAZ;;AACA,MAAI,CAACC,KAAK,CAAEV,IAAF,CAAV,EAAoB;AACnB,WAAO,KAAP;AACA,GAFD,MAEO;AACNS,IAAAA,QAAQ,GAAGT,IAAI,CAACC,KAAL,CAAY,GAAZ,CAAX;;AACA,QAAIQ,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACxBH,MAAAA,MAAM,GAAGC,QAAQ,CAACL,GAAT,EAAT;;AACA,UAAIM,KAAK,CAAEF,MAAF,CAAT,EAAqB;AACpB,eAAO,KAAP;AACA,OAFD,MAEO;AACN,eAAOT,MAAM,CAAEC,IAAF,CAAb;AACA;AACD,KAPD,MAOO;AACN,aAAO,KAAP;AACA;AACD;AACD,CAjBD;AAmBA;AACA;AACA;AACA;AACA;;;AACA,IAAIY,OAAO,GAAG,UAAWC,KAAX,EAAmB;AAChC;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACZ,KAAN,CAAa,GAAb,CAAR;AACA,MAAIa,QAAQ,GAAGD,KAAK,CAACT,GAAN,EAAf;AACA,MAAIK,QAAQ,GAAGK,QAAQ,CAACb,KAAT,CAAgB,GAAhB,CAAf;AACA,MAAIc,QAAQ,GAAGN,QAAQ,CAACO,KAAT,EAAf;AACA,MAAIC,GAAG,GAAGR,QAAQ,CAACH,IAAT,CAAe,GAAf,CAAV;AACA,MAAIE,MAAM,GAAGD,SAAS,CAAEQ,QAAF,CAAtB,CAPgC,CAQhC;;AACA,MAAIP,MAAJ,EAAY;AACXO,IAAAA,QAAQ,GAAGP,MAAX;AACA,GAFD,MAEO;AACNO,IAAAA,QAAQ,GAAGA,QAAQ,GAAG,IAAtB;AACA;;AACDD,EAAAA,QAAQ,GAAG,CAACC,QAAD,EAAWE,GAAX,EAAgBX,IAAhB,CAAsB,GAAtB,CAAX;AACAO,EAAAA,KAAK,CAACR,IAAN,CAAYS,QAAZ;AACA,SAAOD,KAAK,CAACP,IAAN,CAAW,GAAX,CAAP;AACA,CAjBD;AAmBA;AACA;AACA;AACA;AACA;;;AACA,IAAIY,SAAS,GAAG,UAAUL,KAAV,EAAiB;AAChC,MAAIhB,EAAE,CAACsB,UAAH,CAAeN,KAAf,CAAJ,EAA4B;AAC3B,WAAOK,SAAS,CAAEN,OAAO,CAAEC,KAAF,CAAT,CAAhB;AACA,GAFD,MAEO;AACN,WAAOA,KAAP;AACA;AACD,CAND;;AAWAO,MAAM,CAACC,OAAP,GAAiBH,SAAjB","sourcesContent":["var fs = require('fs');\n\n/*!\n * add 1 to suffix number\n * @param {String} name file basename\n * @return {String} name with addition\n */\nvar addOne = function (name) {\n\tname = name.split( '_' );\n\tvar n = Number( name.pop()) + 1;\n\tname.push( n );\n\treturn name.join( '_' );\n};\n\n\n/*!\n * detect if name has a number suffix after '_'\n * (example: picture_5.jpg)\n * @param  {string}  name basename to examinate\n * @return {Boolean|Number}      if has not suffix: false, else: name with addition\n */\nvar hasSuffix = function (name) {\n\tvar suffix, splitted;\n\tif (!isNaN( name )) {\n\t\treturn false;\n\t} else {\n\t\tsplitted = name.split( '_' );\n\t\tif (splitted.length > 1) {\n\t\t\tsuffix = splitted.pop();\n\t\t\tif (isNaN( suffix )) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn addOne( name );\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\n/*!\n * separate basename from file path and send it to rename\n * @param  {String} route route of the file\n * @return {String}       new name\n */\nvar newName = function ( route ) {\n\t// get filename\n\troute = route.split( '/' );\n\tvar filename = route.pop();\n\tvar splitted = filename.split( '.' );\n\tvar basename = splitted.shift();\n\tvar ext = splitted.join( '.' );\n\tvar suffix = hasSuffix( basename );\n\t// check if filefileName has suffix\n\tif (suffix) {\n\t\tbasename = suffix;\n\t} else {\n\t\tbasename = basename + '_1';\n\t}\n\tfilename = [basename, ext].join( '.' );\n\troute.push( filename );\n\treturn route.join('/');\n};\n\n/*!\n * detects if file route exist and send it to rename\n * @param  {String} route file path\n * @return {String}       unique path\n */\nvar finalName = function (route) {\n\tif (fs.existsSync( route )) {\n\t\treturn finalName( newName( route ));\n\t} else {\n\t\treturn route;\n\t}\n};\n\n\n\n\nmodule.exports = finalName;\n"]},"metadata":{},"sourceType":"script"}