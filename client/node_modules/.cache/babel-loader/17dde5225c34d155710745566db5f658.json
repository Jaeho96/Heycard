{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnddj\\\\Desktop\\\\React Project\\\\HeyCard\\\\client\\\\src\\\\routes\\\\Repository.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Sidebar from \"../Components/Sidebar\";\nimport axios from \"axios\";\nimport { response } from \"express\"; //명함 만들기 main 화면\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MakemainPositioner = styled.div`\n  display: flex;\n  border-style: solid;\n`; // 출력폼\n\n_c = MakemainPositioner;\nconst Outputform = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n_c2 = Outputform;\nconst Outputlayer = styled.div`\n  display: flex;\n  width: 90%;\n  height: 90%;\n  border-style: solid;\n  border-radius: 20px;\n  font-family: \"Noto Sans KR\", sans-serif;\n`;\n_c3 = Outputlayer;\nconst Cardlayer = styled.div`\n  width: 250px;\n  height: 500px;\n  border-style: solid;\n`;\n_c4 = Cardlayer;\n\nfunction Repository({\n  usertoken,\n  usermail\n}) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    token\n  } = usertoken || {}; // App.js에서 token값 가져오기\n\n  const {\n    logmail\n  } = usermail || {}; // App.js에서 logmail값 가져오기\n\n  useEffect(() => {\n    let completed = false; //초기에는 실행해야 되기때문에 false flag 변수\n    // query를 리턴하는 함수를 result에 할당\n\n    async function getContents() {\n      const result = await axios.get(\"http://localhost:3001/api/get\");\n      if (!completed) setData(result.data);\n    }\n\n    axios(option).then(response => console.log(response)); // async function getContents() {\n    //   return fetch(\"/api/contents/manageCard/select\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       logmail: logmail,\n    //       token: token,\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then((response) => {\n    //       console.log(\"Success:\", JSON.stringify(response));\n    //       return JSON.stringify(response);\n    //     });\n    // }\n    // const resultImage = getContents().then((response) =>\n    //   console.log(JSON.parse(response))\n    // );\n    //getContents().then(response => console.log(JSON.parse(response)[0]));\n    //getContents().then(response => console.log(JSON.parse(response)[0].mail));\n\n    getContents();\n    return () => {\n      completed = true;\n    }; //query가 변할때 useEffect를 실행해야하는 시점이다.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MakemainPositioner, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outputform, {\n      children: /*#__PURE__*/_jsxDEV(Outputlayer, {\n        children: /*#__PURE__*/_jsxDEV(Cardlayer, {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.img,\n            width: \"300\",\n            height: \"400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Repository, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c5 = Repository;\nexport default Repository;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"MakemainPositioner\");\n$RefreshReg$(_c2, \"Outputform\");\n$RefreshReg$(_c3, \"Outputlayer\");\n$RefreshReg$(_c4, \"Cardlayer\");\n$RefreshReg$(_c5, \"Repository\");","map":{"version":3,"sources":["C:/Users/qnddj/Desktop/React Project/HeyCard/client/src/routes/Repository.js"],"names":["React","useEffect","useState","styled","Sidebar","axios","response","MakemainPositioner","div","Outputform","Outputlayer","Cardlayer","Repository","usertoken","usermail","data","setData","token","logmail","completed","getContents","result","get","option","then","console","log","map","item","img"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CAEA;;;AACA,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAI;AACtC;AACA;AACA,CAHA,C,CAIA;;KAJMD,kB;AAKN,MAAME,UAAU,GAAGN,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMC,U;AAQN,MAAMC,WAAW,GAAGP,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAME,W;AASN,MAAMC,SAAS,GAAGR,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA,CAJA;MAAMG,S;;AAMN,SAASC,UAAT,CAAoB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAApB,EAA6C;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAYJ,SAAS,IAAI,EAA/B,CAF2C,CAER;;AACnC,QAAM;AAAEK,IAAAA;AAAF,MAAcJ,QAAQ,IAAI,EAAhC,CAH2C,CAGP;;AAEpCb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,SAAS,GAAG,KAAhB,CADc,CACS;AAEvB;;AACA,mBAAeC,WAAf,GAA6B;AAC3B,YAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,+BAAV,CAArB;AACA,UAAI,CAACH,SAAL,EAAgBH,OAAO,CAACK,MAAM,CAACN,IAAR,CAAP;AACjB;;AAEDV,IAAAA,KAAK,CAACkB,MAAD,CAAL,CAAcC,IAAd,CAAoBlB,QAAD,IAAcmB,OAAO,CAACC,GAAR,CAAYpB,QAAZ,CAAjC,EATc,CAUd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAc,IAAAA,WAAW;AACX,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD,CAjCc,CAqCd;AACD,GAtCQ,EAsCN,EAtCM,CAAT;AAwCA,sBACE,QAAC,kBAAD;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,SAAD;AAAA,oBACGJ,IAAI,CAACY,GAAL,CAAUC,IAAD,iBACR;AAAK,YAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,YAAA,KAAK,EAAC,KAA1B;AAAgC,YAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA3DQjB,U;;MAAAA,U;AA6DT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\n\r\nimport axios from \"axios\";\r\nimport { response } from \"express\";\r\n\r\n//명함 만들기 main 화면\r\nconst MakemainPositioner = styled.div`\r\n  display: flex;\r\n  border-style: solid;\r\n`;\r\n// 출력폼\r\nconst Outputform = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Outputlayer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-style: solid;\r\n  border-radius: 20px;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n`;\r\n\r\nconst Cardlayer = styled.div`\r\n  width: 250px;\r\n  height: 500px;\r\n  border-style: solid;\r\n`;\r\n\r\nfunction Repository({ usertoken, usermail }) {\r\n  const [data, setData] = useState([]);\r\n  const { token } = usertoken || {}; // App.js에서 token값 가져오기\r\n  const { logmail } = usermail || {}; // App.js에서 logmail값 가져오기\r\n\r\n  useEffect(() => {\r\n    let completed = false; //초기에는 실행해야 되기때문에 false flag 변수\r\n\r\n    // query를 리턴하는 함수를 result에 할당\r\n    async function getContents() {\r\n      const result = await axios.get(\"http://localhost:3001/api/get\");\r\n      if (!completed) setData(result.data);\r\n    }\r\n\r\n    axios(option).then((response) => console.log(response));\r\n    // async function getContents() {\r\n    //   return fetch(\"/api/contents/manageCard/select\", {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //       logmail: logmail,\r\n    //       token: token,\r\n    //     }),\r\n    //   })\r\n    //     .then((res) => res.json())\r\n    //     .then((response) => {\r\n    //       console.log(\"Success:\", JSON.stringify(response));\r\n    //       return JSON.stringify(response);\r\n    //     });\r\n    // }\r\n    // const resultImage = getContents().then((response) =>\r\n    //   console.log(JSON.parse(response))\r\n    // );\r\n    //getContents().then(response => console.log(JSON.parse(response)[0]));\r\n    //getContents().then(response => console.log(JSON.parse(response)[0].mail));\r\n    getContents();\r\n    return () => {\r\n      completed = true;\r\n    };\r\n\r\n    //query가 변할때 useEffect를 실행해야하는 시점이다.\r\n  }, []);\r\n\r\n  return (\r\n    <MakemainPositioner>\r\n      <Sidebar />\r\n      <Outputform>\r\n        <Outputlayer>\r\n          <Cardlayer>\r\n            {data.map((item) => (\r\n              <img src={item.img} width=\"300\" height=\"400\"></img>\r\n            ))}\r\n          </Cardlayer>\r\n        </Outputlayer>\r\n      </Outputform>\r\n    </MakemainPositioner>\r\n  );\r\n}\r\n\r\nexport default Repository;\r\n"]},"metadata":{},"sourceType":"module"}