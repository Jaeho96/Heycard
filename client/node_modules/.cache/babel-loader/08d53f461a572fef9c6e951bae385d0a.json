{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qnddj\\\\Desktop\\\\React Project\\\\HeyCard\\\\client\\\\src\\\\routes\\\\Signin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../Logo2.svg\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Kakao\n} = window;\n\nfunction Signin({\n  authenticated,\n  login,\n  gettoken,\n  getusermail,\n  location\n}) {\n  _s();\n\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\n  const [username, setUsername] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [usermail, setUsermail] = useState(\"\"); // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\n\n  const kakaoLoginClickHandler = () => {\n    //카카오 로그인 api\n    Kakao.Auth.login({\n      scope: \"profile, account_email, gender\",\n      success: function (authObj) {\n        //토큰\n        setToken(authObj.access_token);\n        Kakao.API.request({\n          url: \"/v2/user/me\",\n          success: res => {\n            // res.kakao_account (사용자 정보)\n            setUsername(res.kakao_account.profile.nickname);\n            console.log(res.kakao_account.email);\n          } // Kakao.API.request.success - end\n\n        }); // Kakao.API.request - end\n      } // Kakao.Auth.login.success - end\n\n    }); // Kakao.Auth.login - end\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\n\n\n  useEffect(() => {\n    //username state의 값이 변하게 되면 login({username})을 실행\n    return () => login({\n      username\n    });\n  }, [username]);\n  useEffect(() => {\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\n    return () => gettoken({\n      token\n    });\n  }, [token]); // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\n\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n  if (authenticated) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: from\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main-sign\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo,\n        alt: \"\\uB85C\\uACE0\",\n        width: \"300px\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\uC9C0\\uAE08 \\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uC2DC\\uBA74 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\uBA85\\uD568\\uC774 5\\uCD08\\uB9CC\\uC5D0 \\uB69D\\uB531!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sign-btn\",\n      onClick: kakaoLoginClickHandler,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signin\",\n      className: \"sign-btn2\",\n      children: [\"\\uCE74\\uCE74\\uC624 \\uACC4\\uC815\\uC73C\\uB85C \", /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"\\uC2E0\\uADDC \\uAC00\\uC785\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signin, \"L+D6d0LkUP5U6QmDTXv4d5JMdgo=\");\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["C:/Users/qnddj/Desktop/React Project/HeyCard/client/src/routes/Signin.js"],"names":["React","useEffect","useState","Link","Redirect","Kakao","window","Signin","authenticated","login","gettoken","getusermail","location","username","setUsername","token","setToken","usermail","setUsermail","kakaoLoginClickHandler","Auth","scope","success","authObj","access_token","API","request","url","res","kakao_account","profile","nickname","console","log","email","from","state","pathname","Logo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Signin({ authenticated, login, gettoken, getusermail, location }) {\r\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [usermail, setUsermail] = useState(\"\");\r\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\r\n  const kakaoLoginClickHandler = () => {\r\n    //카카오 로그인 api\r\n    Kakao.Auth.login({\r\n      scope: \"profile, account_email, gender\",\r\n      success: function (authObj) {\r\n        //토큰\r\n        setToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: \"/v2/user/me\",\r\n          success: (res) => {\r\n            // res.kakao_account (사용자 정보)\r\n            setUsername(res.kakao_account.profile.nickname);\r\n            console.log(res.kakao_account.email);\r\n          }, // Kakao.API.request.success - end\r\n        }); // Kakao.API.request - end\r\n      }, // Kakao.Auth.login.success - end\r\n    }); // Kakao.Auth.login - end\r\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\r\n\r\n  useEffect(() => {\r\n    //username state의 값이 변하게 되면 login({username})을 실행\r\n    return () => login({ username });\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\r\n    return () => gettoken({ token });\r\n  }, [token]);\r\n\r\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (authenticated) return <Redirect to={from} />;\r\n\r\n  return (\r\n    <div className=\"Main-sign\">\r\n      <div className=\"sign-logo\">\r\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\r\n      </div>\r\n\r\n      <div className=\"sign-text\">\r\n        <p> 지금 회원가입하시면 </p>\r\n        <p> 명함이 5초만에 뚝딱!</p>\r\n      </div>\r\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\r\n        {\" \"}\r\n      </button>\r\n      <Link to=\"/signin\" className=\"sign-btn2\">\r\n        카카오 계정으로 <u>신규 가입하기</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}