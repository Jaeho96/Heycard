{"ast":null,"code":"import _objectSpread from\"C:/Users/qnddj/Desktop/React Project/\\uC804\\uC790\\uBA85\\uD568Project/makecard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/qnddj/Desktop/React Project/\\uC804\\uC790\\uBA85\\uD568Project/makecard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{HashRouter,Route}from\"react-router-dom\";import css from\"./App.css\";import NavigationUser from\"./Components/NavigationUser\";import Navigation from\"./Components/Navigation\";import Home from\"./routes/Home\";import Myspace from\"./routes/Myspace\";import Signin from\"./routes/Signin\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];// login({username})의 함수를 통해 Signin.js에서 username을 가져와 setUser을 통해 상태관리\nvar authenticated=user!=null;// 사용자 로그인 인증\nvar login=function login(_ref){var username=_ref.username;return setUser({username:username});};var logout=function logout(){return setUser(null);};console.log(user,'user값');return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(HashRouter,{children:[authenticated?/*#__PURE__*/ //사용자가 로그인 O\n_jsx(NavigationUser,{user:user,logout:logout})//사용자의 카카오 닉네임을 받아온 user(state)와 logout함수를 인자로 보내준다.\n:/*#__PURE__*/ // 사용자가 로그인 X\n_jsx(Navigation,{}),/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:Home}),/*#__PURE__*/_jsx(Route,{path:\"/myspace/create\",component:Myspace}),/*#__PURE__*/_jsx(Route,{path:\"/signin\",render:function render(props){return/*#__PURE__*/_jsx(Signin,_objectSpread({authenticated:authenticated,login:login},props));}// Signin을 렌더링할때 authenticated(사용자 로그인 여부)와 login(카카오 로그인 api에서 사용자 닉네임을 받아오기 위한 함수)를 인자로 보내준다.\n})]})});}export default App;","map":{"version":3,"sources":["C:/Users/qnddj/Desktop/React Project/전자명함Project/makecard/src/App.js"],"names":["React","useState","useEffect","HashRouter","Route","css","NavigationUser","Navigation","Home","Myspace","Signin","App","user","setUser","authenticated","login","username","logout","console","log","props"],"mappings":"uYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,CAAqBC,KAArB,KAAkC,kBAAlC,CACA,MAAOC,CAAAA,GAAP,KAAgB,WAAhB,CAEA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,6IAGA,QAASC,CAAAA,GAAT,EAAe,eACWV,QAAQ,CAAC,IAAD,CADnB,wCACNW,IADM,eACAC,OADA,eAEb;AACA,GAAMC,CAAAA,aAAa,CAAGF,IAAI,EAAI,IAA9B,CAAqC;AAErC,GAAMG,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,UAAEC,CAAAA,QAAF,MAAEA,QAAF,OAAgBH,CAAAA,OAAO,CAAC,CAACG,QAAQ,CAARA,QAAD,CAAD,CAAvB,EAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMJ,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAf,CAEAK,OAAO,CAACC,GAAR,CAAYP,IAAZ,CAAkB,OAAlB,EACA,mBACE,sCACE,MAAC,UAAD,YACGE,aAAa,eAAM;AAClB,KAAC,cAAD,EAAgB,IAAI,CAAEF,IAAtB,CAA4B,MAAM,CAAEK,MAApC,EAA8C;AADlC,eAEM;AAClB,KAAC,UAAD,IAJJ,cAME,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,CAAE,IAAvB,CAA6B,SAAS,CAAET,IAAxC,EANF,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,iBAAZ,CAA8B,SAAS,CAAEC,OAAzC,EAPF,cAQE,KAAC,KAAD,EACA,IAAI,CAAC,SADL,CAEA,MAAM,CAAE,gBAAAW,KAAK,qBACX,KAAC,MAAD,gBAAQ,aAAa,CAAEN,aAAvB,CAAsC,KAAK,CAAEC,KAA7C,EAAwDK,KAAxD,EADW,EAEV;AAJH,EARF,GADF,EADF,CAoBD,CAED,cAAeT,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport css from \"./App.css\";\n\nimport NavigationUser from \"./Components/NavigationUser\";\nimport Navigation from \"./Components/Navigation\";\nimport Home from \"./routes/Home\";\nimport Myspace from \"./routes/Myspace\";\nimport Signin from \"./routes/Signin\";\n\n\nfunction App() {\n  const [user, setUser] = useState(null); \n  // login({username})의 함수를 통해 Signin.js에서 username을 가져와 setUser을 통해 상태관리\n  const authenticated = user != null;  // 사용자 로그인 인증\n  \n  const login = ({username}) => setUser({username});\n  const logout = () => setUser(null);\n  \n  console.log(user, 'user값');\n  return (\n    <>\n      <HashRouter>\n        {authenticated ? (  //사용자가 로그인 O\n          <NavigationUser user={user} logout={logout}/> //사용자의 카카오 닉네임을 받아온 user(state)와 logout함수를 인자로 보내준다.\n        ) : (               // 사용자가 로그인 X\n          <Navigation />\n        )}\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/myspace/create\" component={Myspace} />\n        <Route \n        path=\"/signin\" \n        render={props => (\n          <Signin authenticated={authenticated} login={login} {...props} />\n        )} // Signin을 렌더링할때 authenticated(사용자 로그인 여부)와 login(카카오 로그인 api에서 사용자 닉네임을 받아오기 위한 함수)를 인자로 보내준다.\n        />\n      </HashRouter>\n    \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}