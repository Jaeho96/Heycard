{"ast":null,"code":"import _slicedToArray from\"C:/Users/qnddj/Desktop/React Project/\\uC804\\uC790\\uBA85\\uD568Project/makecard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import Logo from\"../Logo2.svg\";import{Redirect}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var _window=window,Kakao=_window.Kakao;function Signin(_ref){var authenticated=_ref.authenticated,login=_ref.login,gettoken=_ref.gettoken,location=_ref.location;// authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),token=_useState4[0],setToken=_useState4[1];// 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\nvar kakaoLoginClickHandler=function kakaoLoginClickHandler(){//카카오 로그인 api\nKakao.Auth.login({scope:\"profile, account_email, gender\",success:function success(authObj){//토큰\nsetToken(authObj.access_token);Kakao.API.request({url:\"/v2/user/me\",success:function success(res){// res.kakao_account (사용자 정보)\nsetUsername(res.kakao_account.profile.nickname);}// Kakao.API.request.success - end\n});// Kakao.API.request - end\n}// Kakao.Auth.login.success - end\n});// Kakao.Auth.login - end\n};// kakaoLoginClickHandler - end (카카오 로그인 api - end)\nuseEffect(function(){//username state의 값이 변하게 되면 login({username})을 실행\nreturn function(){return login({username:username});};},[username]);useEffect(function(){//token state의 값이 변하게 되면 gettoken({token})을 실행\nreturn function(){return gettoken({token:token});};},[token]);// authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\nvar _ref2=location.state||{from:{pathname:\"/\"}},from=_ref2.from;if(authenticated)return/*#__PURE__*/_jsx(Redirect,{to:from});return/*#__PURE__*/_jsxs(\"div\",{className:\"Main-sign\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sign-logo\",children:/*#__PURE__*/_jsx(\"img\",{src:Logo,alt:\"\\uB85C\\uACE0\",width:\"300px\",height:\"200px\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sign-text\",children:[/*#__PURE__*/_jsx(\"p\",{children:\" \\uC9C0\\uAE08 \\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uC2DC\\uBA74 \"}),/*#__PURE__*/_jsx(\"p\",{children:\" \\uBA85\\uD568\\uC774 5\\uCD08\\uB9CC\\uC5D0 \\uB69D\\uB531!\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"sign-btn\",onClick:kakaoLoginClickHandler,children:\" \"}),/*#__PURE__*/_jsxs(Link,{to:\"/signin\",className:\"sign-btn2\",children:[\"\\uCE74\\uCE74\\uC624 \\uACC4\\uC815\\uC73C\\uB85C \",/*#__PURE__*/_jsx(\"u\",{children:\"\\uC2E0\\uADDC \\uAC00\\uC785\\uD558\\uAE30\"})]})]});}export default Signin;","map":{"version":3,"sources":["C:/Users/qnddj/Desktop/React Project/전자명함Project/makecard/src/routes/Signin.js"],"names":["React","useEffect","useState","Link","Redirect","window","Kakao","Signin","authenticated","login","gettoken","location","username","setUsername","token","setToken","kakaoLoginClickHandler","Auth","scope","success","authObj","access_token","API","request","url","res","kakao_account","profile","nickname","state","from","pathname","Logo"],"mappings":"oMAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,C,+BAEA,OAASC,QAAT,KAAyB,kBAAzB,C,oGAEkBC,M,CAAVC,K,SAAAA,K,CAER,QAASC,CAAAA,MAAT,MAA8D,IAA5CC,CAAAA,aAA4C,MAA5CA,aAA4C,CAA7BC,KAA6B,MAA7BA,KAA6B,CAAtBC,QAAsB,MAAtBA,QAAsB,CAAZC,QAAY,MAAZA,QAAY,CAC5D;AAD4D,cAE5BT,QAAQ,CAAC,EAAD,CAFoB,wCAErDU,QAFqD,eAE3CC,WAF2C,8BAGlCX,QAAQ,CAAC,EAAD,CAH0B,yCAGrDY,KAHqD,eAG9CC,QAH8C,eAI5D;AACA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnC;AACAV,KAAK,CAACW,IAAN,CAAWR,KAAX,CAAiB,CACfS,KAAK,CAAE,gCADQ,CAEfC,OAAO,CAAE,iBAAUC,OAAV,CAAmB,CAC1B;AACAL,QAAQ,CAACK,OAAO,CAACC,YAAT,CAAR,CACAf,KAAK,CAACgB,GAAN,CAAUC,OAAV,CAAkB,CAChBC,GAAG,CAAE,aADW,CAEhBL,OAAO,CAAE,iBAACM,GAAD,CAAS,CAChB;AACAZ,WAAW,CAACY,GAAG,CAACC,aAAJ,CAAkBC,OAAlB,CAA0BC,QAA3B,CAAX,CACD,CAAE;AALa,CAAlB,EAMI;AACL,CAAE;AAZY,CAAjB,EAaI;AACL,CAhBD,CAgBG;AACH3B,SAAS,CAAC,UAAM,CACd;AACA,MAAO,kBAAMQ,CAAAA,KAAK,CAAC,CAAEG,QAAQ,CAARA,QAAF,CAAD,CAAX,EAAP,CACD,CAHQ,CAGN,CAACA,QAAD,CAHM,CAAT,CAKAX,SAAS,CAAC,UAAM,CACd;AACA,MAAO,kBAAMS,CAAAA,QAAQ,CAAC,CAAEI,KAAK,CAALA,KAAF,CAAD,CAAd,EAAP,CACD,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA;AAhC4D,UAiC3CH,QAAQ,CAACkB,KAAT,EAAkB,CAAEC,IAAI,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAR,CAjCyB,CAiCpDD,IAjCoD,OAiCpDA,IAjCoD,CAkC5D,GAAItB,aAAJ,CAAmB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAEsB,IAAd,EAAP,CAEnB,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,WAAf,uBACE,YAAK,GAAG,CAAEE,IAAV,CAAgB,GAAG,CAAC,cAApB,CAAyB,KAAK,CAAC,OAA/B,CAAuC,MAAM,CAAC,OAA9C,EADF,EADF,cAKE,aAAK,SAAS,CAAC,WAAf,wBACE,gFADF,cAEE,4EAFF,GALF,cASE,eAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAEhB,sBAAtC,UACG,GADH,EATF,cAYE,MAAC,IAAD,EAAM,EAAE,CAAC,SAAT,CAAmB,SAAS,CAAC,WAA7B,uEACW,4DADX,GAZF,GADF,CAkBD,CAED,cAAeT,CAAAA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Signin({ authenticated, login, gettoken, location }) {\r\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\r\n  const kakaoLoginClickHandler = () => {\r\n    //카카오 로그인 api\r\n    Kakao.Auth.login({\r\n      scope: \"profile, account_email, gender\",\r\n      success: function (authObj) {\r\n        //토큰\r\n        setToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: \"/v2/user/me\",\r\n          success: (res) => {\r\n            // res.kakao_account (사용자 정보)\r\n            setUsername(res.kakao_account.profile.nickname);\r\n          }, // Kakao.API.request.success - end\r\n        }); // Kakao.API.request - end\r\n      }, // Kakao.Auth.login.success - end\r\n    }); // Kakao.Auth.login - end\r\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\r\n  useEffect(() => {\r\n    //username state의 값이 변하게 되면 login({username})을 실행\r\n    return () => login({ username });\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\r\n    return () => gettoken({ token });\r\n  }, [token]);\r\n\r\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (authenticated) return <Redirect to={from} />;\r\n\r\n  return (\r\n    <div className=\"Main-sign\">\r\n      <div className=\"sign-logo\">\r\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\r\n      </div>\r\n\r\n      <div className=\"sign-text\">\r\n        <p> 지금 회원가입하시면 </p>\r\n        <p> 명함이 5초만에 뚝딱!</p>\r\n      </div>\r\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\r\n        {\" \"}\r\n      </button>\r\n      <Link to=\"/signin\" className=\"sign-btn2\">\r\n        카카오 계정으로 <u>신규 가입하기</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"]},"metadata":{},"sourceType":"module"}