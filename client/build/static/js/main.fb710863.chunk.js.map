{"version":3,"sources":["Logo2.svg","Components/NavigationUser.js","Components/Navigation.js","routes/Home.js","Components/Sidebar.js","Components/Modal.js","routes/Myspace.js","routes/Signin.js","routes/Repository.js","App.js","index.js"],"names":["Navigation_User","user","logout","username","activeStyle","color","className","src","Logo","alt","exact","to","onClick","Navigation","Home","LeftbarPositioner","styled","div","LeftbarHeader","LeftbarBody","background","borderRadius","Sidebar","Modal","props","open","close","header","children","MakemainPositioner","Outputform","Outputlayer","Outputcorporate","Outputname","Outputposition","Outputphonenumber","Outputofficenumber","Outputemail","Outputaddress","Outputintroduceheader","label","Outputintroduce","Inputform","Cololselector","Colorbuttons","Infotitle","Infoinputs","Infoinputposition","Infoinput","input","Introduceinput","textarea","Myspace","token","usertoken","useState","name","mail","corporate","position","phonenumber","officenumber","address","introduce","img","values","setValues","modalOpen","setModalOpen","handleChange","e","target","value","handleClick","console","log","id","style","backgroundColor","type","placeholder","onChange","domtoimage","toBlob","document","getElementById","then","blob","reader","FileReader","readAsDataURL","onloadend","base64data","result","Kakao","window","Signin","authenticated","login","gettoken","location","setUsername","setToken","useEffect","from","state","pathname","width","height","Auth","scope","success","authObj","access_token","API","request","url","res","kakao_account","profile","nickname","Cardlayer","Repository","data","setData","completed","a","axios","get","map","item","App","setUser","setuserToken","NavigationUser","path","component","render","ReactDOM"],"mappings":"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","file":"static/js/main.fb710863.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo2.79b8a6fb.svg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\n\r\nfunction Navigation_User({user, logout}) {\r\n  // Signin.js -> App.js에서 받아온 사용자 카카오 닉네임 {user}와 App.js에서 선언한 logout함수를 인자로 받아온다.\r\n  const {username} = user || {};\r\n  // Signin.js -> App.js에서 받아온 사용자 카카오 닉네임 {user}를 {username}을 선언하여 {username}에 값을 넣어 관리한다.\r\n  const activeStyle = {\r\n    color: \"#A259FF\",\r\n  };\r\n\r\n  const handleClick = () => {\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    // Nav- Start\r\n    <div className=\"Nav\">\r\n      <img src={Logo} alt=\"로고\" className=\"nav-logo\"></img>\r\n      <div className=\"nav-item\">\r\n        <NavLink exact to=\"/\" activeStyle={activeStyle}>\r\n          HOME\r\n        </NavLink>\r\n        <NavLink to=\"/myspace\" activeStyle={activeStyle}>\r\n          MY SPACE\r\n        </NavLink>\r\n        <NavLink exact to=\"/\" onClick={handleClick}>\r\n          LOGOUT\r\n        </NavLink>\r\n          {username}\r\n      </div>\r\n    </div>\r\n    //    Nav-End\r\n  );\r\n}\r\n\r\nexport default Navigation_User;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\n\r\nfunction Navigation() {\r\n  const activeStyle = {\r\n    color: \"#A259FF\",\r\n  };\r\n\r\n  return (\r\n    // Nav- Start\r\n    <div className=\"Nav\">\r\n      <img src={Logo} alt=\"로고\" className=\"nav-logo\"></img>\r\n      <div className=\"nav-item\">\r\n        <NavLink exact to=\"/\" activeStyle={activeStyle}>\r\n          HOME\r\n        </NavLink>\r\n        <NavLink to=\"/signin\" activeStyle={activeStyle}>\r\n          LOGIN\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n    //    Nav-End\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"main-text\">\r\n        <p>지금 바로 </p>\r\n        <p>당신만의 명함을 만들어보세요!</p>\r\n      </div>\r\n      <Link to=\"/signin\" className=\"main-btn\">\r\n        GET STARTED!\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LeftbarPositioner = styled.div`\r\n  width: 7rem;\r\n  height: 100vh;\r\n`;\r\n\r\nconst LeftbarHeader = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 0.5rem;\r\n  border-bottom: solid black;\r\n  margin-top: 1rem;\r\n  color: #a259ff;\r\n`;\r\n\r\nconst LeftbarBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  border-style: solid;\r\n`;\r\n\r\nconst activeStyle = {\r\n  background: \"#DBBEFF\",\r\n  borderRadius: \"7px\",\r\n};\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <LeftbarPositioner>\r\n      <LeftbarHeader>MY SPACE</LeftbarHeader>\r\n      <LeftbarBody>\r\n        <NavLink\r\n          exact\r\n          to=\"/myspace\"\r\n          activeStyle={activeStyle}\r\n          className=\"Sidebaritem\"\r\n        >\r\n          명함만들기\r\n        </NavLink>\r\n        <NavLink\r\n          exact\r\n          to=\"/myspace/repository\"\r\n          activeStyle={activeStyle}\r\n          className=\"Sidebaritem\"\r\n        >\r\n          명함보관함\r\n        </NavLink>\r\n      </LeftbarBody>\r\n    </LeftbarPositioner>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport \"../Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  const { open, close, header } = props;\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴.\r\n  return (\r\n    //모달이 열릴때 openModal클래스가 생성된다.\r\n    <div className={open ? \"openModal modal\" : \"modal\"}>\r\n      {open ? (\r\n        <section>\r\n          <header>\r\n            {header}\r\n            <button className=\"close\" onClick={close}>\r\n              &times;\r\n            </button>\r\n          </header>\r\n          <main>{props.children}</main>\r\n          <footer>\r\n            <button className=\"close\" onClick={close}>\r\n              close\r\n            </button>\r\n          </footer>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport Axios from \"axios\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport FileSaver, { saveAs } from \"file-saver\";\r\nimport Modal from \"../Components/Modal\";\r\n\r\n//명함 만들기 main 화면\r\nconst MakemainPositioner = styled.div`\r\n  display: flex;\r\n`;\r\n// 출력폼\r\nconst Outputform = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Outputlayer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-style: solid;\r\n  border-radius: 20px;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Outputcorporate = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 90%;\r\n  height: 65px;\r\n  margin-top: 1rem;\r\n  border-bottom-style: solid;\r\n  font-size: 35px;\r\n`;\r\n\r\nconst Outputname = styled.div`\r\n  width: 90%;\r\n  height: 50px;\r\n  margin-top: 1rem;\r\n  font-size: 50px;\r\n`;\r\n\r\nconst Outputposition = styled.div`\r\n  width: 90%;\r\n  height: 50px;\r\n  margin-top: 1rem;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Outputphonenumber = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputofficenumber = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputemail = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputaddress = styled.div`\r\n  width: 90%;\r\n  height: 35px;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Outputintroduceheader = styled.label`\r\n  width: 90%;\r\n  margin-top: 1rem;\r\n  font-size: 25px;\r\n  border-top-style: solid;\r\n  text-align: center;\r\n`;\r\n\r\nconst Outputintroduce = styled.div`\r\n  width: 90%;\r\n  margin-top: 1rem;\r\n  font-size: 20px;\r\n`;\r\n\r\n// 입력폼\r\nconst Inputform = styled.div`\r\n  width: 50%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n`;\r\n// 명함 컬러 선택하기\r\nconst Cololselector = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Colorbuttons = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\n// 기본 정보 입력하기\r\nconst Infotitle = styled.div`\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  margin-top: 1rem;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Infoinputs = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Infoinputposition = styled.div``;\r\n\r\nconst Infoinput = styled.input`\r\n  width: 500px;\r\n  font-size: 15px;\r\n  margin-top: 0.5rem;\r\n  margin-left: 2rem;\r\n  margin-right: 8rem;\r\n  border-radius: 15px;\r\n`;\r\n\r\nconst Introduceinput = styled.textarea`\r\n  width: 500px;\r\n  height: 230px;\r\n  font-size: 15px;\r\n  margin-top: 1rem;\r\n  margin-left: 2rem;\r\n  margin-right: 8rem;\r\n  border-radius: 15px;\r\n`;\r\n\r\nfunction Myspace({ usertoken }) {\r\n  const { token } = usertoken || {}; // App.js에서 token값 가져오기\r\n\r\n  const [values, setValues] = useState({\r\n    token: token,\r\n    color: \"\",\r\n    name: \"\",\r\n    mail: \"\",\r\n    corporate: \"\",\r\n    position: \"\",\r\n    phonenumber: \"\",\r\n    officenumber: \"\",\r\n    address: \"\",\r\n    introduce: \"\",\r\n    img: \"\",\r\n  });\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    // Basicinfo input eventhandle function\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    // Colorselect button eventhandle function\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const submit = (e) => {\r\n    const { name } = e.target;\r\n    domtoimage\r\n      .toBlob(document.getElementById(\"outputimg\"))\r\n      .then(function (blob) {\r\n        let reader = new FileReader(); //캡쳐한 blob을 dataurl로 변환\r\n        reader.readAsDataURL(blob);\r\n        reader.onloadend = () => {\r\n          let base64data = reader.result;\r\n          setValues({ ...values, [name]: base64data });\r\n        };\r\n      });\r\n\r\n    // /api/insert로 json보내기\r\n    // Axios.post(\"http://localhost:3001/api/insert\", {\r\n    //   token: values.token,\r\n    //   color: values.color,\r\n    //   name: values.name,\r\n    //   mail: values.mail,\r\n    //   corporate: values.corporate,\r\n    //   position: values.position,\r\n    //   phonenumber: values.phonenumber,\r\n    //   officenumber: values.officenumber,\r\n    //   address: values.address,\r\n    //   introduce: values.introduce,\r\n    //   img: values.img,\r\n    // });\r\n  };\r\n  console.log(values);\r\n\r\n  return (\r\n    <MakemainPositioner>\r\n      <Sidebar />\r\n      <Outputform>\r\n        <Outputlayer id=\"outputimg\" style={{ backgroundColor: values.color }}>\r\n          <Outputcorporate>{values.corporate}</Outputcorporate>\r\n          <Outputname>{values.name}</Outputname>\r\n          <Outputposition>{values.position}</Outputposition>\r\n          <Outputphonenumber>{values.phonenumber}</Outputphonenumber>\r\n          <Outputofficenumber>{values.officenumber}</Outputofficenumber>\r\n          <Outputemail>{values.mail}</Outputemail>\r\n          <Outputaddress>{values.address}</Outputaddress>\r\n          <Outputintroduceheader>INTRODUCE</Outputintroduceheader>\r\n          <Outputintroduce>{values.introduce}</Outputintroduce>\r\n        </Outputlayer>\r\n      </Outputform>\r\n      <Inputform>\r\n        <Cololselector>\r\n          명함 컬러 선택하기\r\n          <Colorbuttons>\r\n            <button name=\"color\" value=\"red\" onClick={handleClick}>\r\n              빨강\r\n            </button>\r\n            <button name=\"color\" value=\"orange\" onClick={handleClick}>\r\n              주황\r\n            </button>\r\n            <button name=\"color\" value=\"yellow\" onClick={handleClick}>\r\n              노랑\r\n            </button>\r\n            <button name=\"color\" value=\"blue\" onClick={handleClick}>\r\n              파랑\r\n            </button>\r\n          </Colorbuttons>\r\n        </Cololselector>\r\n        <Infotitle>기본 정보 입력하기</Infotitle>\r\n        <Infoinputs>\r\n          <Infoinputposition>\r\n            <label>이름</label>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={values.name}\r\n              placeholder=\"   이름을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>메일주소</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"mail\"\r\n              value={values.mail}\r\n              placeholder=\"   e-mail을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n        </Infoinputs>\r\n        <Infotitle>추가 정보 입력하기</Infotitle>\r\n        <Infoinputs>\r\n          <Infoinputposition>\r\n            <label>회사명</label>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"corporate\"\r\n              value={values.corporate}\r\n              placeholder=\"   회사명을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>직급</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"position\"\r\n              value={values.position}\r\n              placeholder=\"   직급을 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>휴대폰번호</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"phonenumber\"\r\n              value={values.phonenumber}\r\n              placeholder=\"   휴대폰번호를 입력하세요(010-XXXX-XXXX)\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>전화번호</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"officenumber\"\r\n              value={values.officenumber}\r\n              placeholder=\"   전화번호를 입력하세요(02-XXX-XXXX)\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>주소</lable>\r\n            <Infoinput\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={values.address}\r\n              placeholder=\"   주소를 입력하세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <lable>소개</lable>\r\n            <Introduceinput\r\n              type=\"text\"\r\n              name=\"introduce\"\r\n              value={values.introduce}\r\n              placeholder=\"   나를 설명할 수 있는 소개글을 작성해보세요\"\r\n              onChange={handleChange}\r\n            />\r\n          </Infoinputposition>\r\n          <Infoinputposition>\r\n            <button id=\"submitbtn\" name=\"img\" onClick={submit}>\r\n              버튼\r\n            </button>\r\n            <button onClick={openModal}>모달팝업</button>\r\n            {/* header 부분에 텍스트를 입력한다. */}\r\n            <Modal open={modalOpen} close={closeModal} header=\"Modal heading\">\r\n              {/* Modal.js <main> {props.children} </main>에 내용이 입력된다. */}\r\n              리액트 함수형 모달 팝업창입니다. 쉽게 만들 수 있어요. 같이\r\n              만들어봐요!\r\n            </Modal>\r\n          </Infoinputposition>\r\n        </Infoinputs>\r\n      </Inputform>\r\n    </MakemainPositioner>\r\n  );\r\n}\r\n\r\nexport default Myspace;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"../Logo2.svg\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst { Kakao } = window;\r\n\r\nfunction Signin({ authenticated, login, gettoken, location }) {\r\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\r\n  const [username, setUsername] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\r\n  const kakaoLoginClickHandler = () => {\r\n    //카카오 로그인 api\r\n    Kakao.Auth.login({\r\n      scope: \"profile, account_email, gender\",\r\n      success: function (authObj) {\r\n        //토큰\r\n        setToken(authObj.access_token);\r\n        Kakao.API.request({\r\n          url: \"/v2/user/me\",\r\n          success: (res) => {\r\n            // res.kakao_account (사용자 정보)\r\n            setUsername(res.kakao_account.profile.nickname);\r\n          }, // Kakao.API.request.success - end\r\n        }); // Kakao.API.request - end\r\n      }, // Kakao.Auth.login.success - end\r\n    }); // Kakao.Auth.login - end\r\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\r\n  useEffect(() => {\r\n    //username state의 값이 변하게 되면 login({username})을 실행\r\n    return () => login({ username });\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\r\n    return () => gettoken({ token });\r\n  }, [token]);\r\n\r\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  if (authenticated) return <Redirect to={from} />;\r\n\r\n  return (\r\n    <div className=\"Main-sign\">\r\n      <div className=\"sign-logo\">\r\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\r\n      </div>\r\n\r\n      <div className=\"sign-text\">\r\n        <p> 지금 회원가입하시면 </p>\r\n        <p> 명함이 5초만에 뚝딱!</p>\r\n      </div>\r\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\r\n        {\" \"}\r\n      </button>\r\n      <Link to=\"/signin\" className=\"sign-btn2\">\r\n        카카오 계정으로 <u>신규 가입하기</u>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\n\r\n//명함 만들기 main 화면\r\nconst MakemainPositioner = styled.div`\r\n  display: flex;\r\n  border-style: solid;\r\n`;\r\n// 출력폼\r\nconst Outputform = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  margin-top: 1rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Outputlayer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  height: 90%;\r\n  border-style: solid;\r\n  border-radius: 20px;\r\n  font-family: \"Noto Sans KR\", sans-serif;\r\n`;\r\n\r\nconst Cardlayer = styled.div`\r\n  width: 250px;\r\n  height: 500px;\r\n  border-style: solid;\r\n`;\r\n\r\nfunction Repository() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let completed = false; //초기에는 실행해야 되기때문에 false flag 변수\r\n\r\n    //query를 리턴하는 함수를 result에 할당\r\n    async function get() {\r\n      const result = await axios.get(\"http://localhost:3001/api/get\");\r\n      if (!completed) setData(result.data);\r\n    }\r\n    get();\r\n    return () => {\r\n      completed = true;\r\n    };\r\n\r\n    //query가 변할때 useEffect를 실행해야하는 시점이다.\r\n  }, []);\r\n\r\n  return (\r\n    <MakemainPositioner>\r\n      <Sidebar />\r\n      <Outputform>\r\n        <Outputlayer>\r\n          <Cardlayer>\r\n            {data.map((item) => (\r\n              <img src={item.img} width=\"150\" height=\"250\"></img>\r\n            ))}\r\n          </Cardlayer>\r\n        </Outputlayer>\r\n      </Outputform>\r\n    </MakemainPositioner>\r\n  );\r\n}\r\n\r\nexport default Repository;\r\n","import React, { useState } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport css from \"./App.css\";\n\nimport NavigationUser from \"./Components/NavigationUser\";\nimport Navigation from \"./Components/Navigation\";\nimport Home from \"./routes/Home\";\nimport Myspace from \"./routes/Myspace\";\nimport Signin from \"./routes/Signin\";\nimport Repository from \"./routes/Repository\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  // login({username})의 함수를 통해 Signin.js에서 username을 가져와 setUser을 통해 상태관리\n  const authenticated = user != null; // 사용자 로그인 인증\n\n  const [usertoken, setuserToken] = useState(null); //위와 같은 login으로 token값을 가져옴\n  const gettoken = ({ token }) => setuserToken({ token });\n\n  const login = ({ username }) => setUser({ username });\n  const logout = () => setUser(null);\n\n  return (\n    <>\n      <HashRouter>\n        {authenticated ? ( //사용자가 로그인 O\n          <NavigationUser user={user} logout={logout} /> //사용자의 카카오 닉네임을 받아온 user(state)와 logout함수를 인자로 보내준다.\n        ) : (\n          // 사용자가 로그인 X\n          <Navigation />\n        )}\n        <Route path=\"/\" exact={true} component={Home} /> {/* HOME 화면 */}\n        <Route\n          path=\"/myspace\"\n          exact={true}\n          render={(props) => <Myspace usertoken={usertoken} {...props} />}\n        />\n        {/* MY SPACE(명함만들기) 화면 */}\n        <Route path=\"/myspace/repository\" exact={true} component={Repository} />\n        {/* REPOSITORY(명함보관함) 화면 */}\n        <Route\n          path=\"/signin\"\n          render={(props) => (\n            <Signin\n              authenticated={authenticated}\n              login={login}\n              gettoken={gettoken}\n              {...props}\n            />\n          )} // Signin(로그인)을 렌더링할때 authenticated(사용자 로그인 여부)와 login(카카오 로그인 api에서 사용자 닉네임을 받아오기 위한 함수)를 인자로 보내준다.\n        />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}